server {
  listen 443 default_server ssl;

  server_name dev.camptocamp.org dev.pse.infra.camptocamp.org;

  ssl_certificate     /srv/sslcerts/dev.camptocamp.org.crt;
  ssl_certificate_key /srv/sslcerts/dev.camptocamp.org.key;

  rewrite ^/wikiassoce(.*)$  https://wikiassoce.dev.camptocamp.org$1 permanent;
  rewrite ^/trac/c2corg(.*)$ https://trac.dev.camptocamp.org$1 permanent;

  location ~ ^/(inventory|dashboard).html$ {
    include c2cauth.conf;
    root /srv/dev.camptocamp.org/htdocs/;
  }

  location /pgreports {
    include c2cauth.conf;
    proxy_pass http://logstash.pse.infra.camptocamp.org/pgreports;
  }

}

server {
  listen 80 default_server;
  server_name dev.camptocamp.org dev.pse.infra.camptocamp.org;

  rewrite ^.*$ https://$host$request_uri? permanent;
}

server {
  listen 80;
  server_name pkg.dev.camptocamp.org;

  location / {
    # avoid writing tmp files to disk
    proxy_buffering off;
    proxy_pass http://pkg.pse.infra.camptocamp.org/;
  }
}

server {
  listen 80;
  server_name content-factory.dev.camptocamp.org *.content-factory.dev.camptocamp.org;

  client_max_body_size 2m;

  location / {
    proxy_set_header Host $http_host;
    proxy_pass http://content-factory.pse.infra.camptocamp.org/;
  }
}

server {
  listen 80;
  server_name pre-prod.dev.camptocamp.org *.pre-prod.dev.camptocamp.org;

  client_max_body_size 2m;

  # varnish doesn't know how to handle this redirection to www for pre-prod
  if ($http_host ~ ^pre-prod.*) {
    rewrite ^(.*)$ http://www.$http_host$1 break;
  }

  location / {
    proxy_set_header Host $http_host;
    proxy_pass http://pre-prod.pse.infra.camptocamp.org/;
  }
}


server {
  listen 80;
  server_name ~^(?<subdomain>.*test-.+?)\.dev\.camptocamp\.org$;

  client_max_body_size 2m;

  # varnish doesn't know how to handle this redirection to www for pre-prod
  if ($http_host ~ ^test-.*) {
    rewrite ^(.*)$ http://www.$http_host$1 break;
  }

  location ~ ^(/.*)$ {
    proxy_set_header Host $http_host;
    proxy_pass http://$subdomain.pse.infra.camptocamp.org$1$is_args$args;
  }
}
